#!/bin/bash

#
# Tomcat Server Autodiscovery
# ===========================
#
# This script autogenerates any required tomcat instances.

set -e
umask 0007


#
# Handle the cleanup
# ------------------
cleanup_before_exit () { 
  if [ -d "${tmpdir}" ]; then
    rm -rf "${tmpdir}"
  fi
}
# be in a temporay workspace (this works on linux and macosx)
tmpdir=`mktemp -d 2>/dev/null || mktemp -d -t 'tmpdir'`
# trap catches the exit signal and runs the specified function
trap cleanup_before_exit EXIT
# be in our directory
cd "${tmpdir}"


#
# Create instance that does not yet exist
create_instance() {
  instance="${1}"
  application="${2}"

  install -m 0755 -d "/var/lib/tomcats/${instance}-${application}"
  install -m 0755 -d "/etc/systemd/system/tomcat@${instance}-${application}.service.d"

  semanage fcontext -a -t httpd_var_run_t "/var/run/tomcat-${instance}-${application}/socket"
}


#
# Remove instance that exists
remove_instance() {
  instance="${1}"
  application="${2}"

  rm -rf "/var/lib/tomcats/${instance}-${application}"
  rm -rf "/etc/systemd/system/tomcat@${instance}-${application}.service.d"
  rm -f "/etc/sysconfig/tomcat@${instance}-${application}"

  semanage fcontext -d -t httpd_var_run_t "/var/run/tomcat-${instance}-${application}/socket" || true

  systemctl daemon-reload
}



#
# Per application? Run all scripts

run_scripts() {

  instance="${1}"
  application="${2}"
  line="${3}"

  logger -t "tomcat-autodiscovery@${instance}" "running autodiscovery for tomcat instance ${instance} / application ${application}..."

  find "$0.d" -type f -executable | sort | \
  while read x; do
    "$x" "${instance}" "${application}" "${line}" < /dev/null || touch error;
  done

  if test ! -f "error"; then
    logger -t "tomcat-autodiscovery@${instance}" "completed autodiscovery for tomcat instance ${instance} / application ${application}."
  else
    logger -t "tomcat-autodiscovery@${instance}" "failed autodiscovery for tomcat instance ${instance} / application ${application}."
  fi

}


# Per instance? Add/remove instances

if [ $# -eq 1 ]; then

  instance="${1}"

  find "/etc/device/services/app/${instance}/" -mindepth 1 -maxdepth 1 -type l | \
  while read line; do

    target=$(readlink -f "$line")

    if test ! -f "$line/name.txt"; then
      continue;
    fi
    application="$(head $line/name.txt)"

    # remove old instances
    if test -f "$line/removed"; then

      logger -t tomcat-autodiscovery@${instance} "removing tomcat server instance ${instance}-${application}..."

      systemctl stop "tomcat@${instance}-${application}"

      remove_instance "${instance}" "${application}"
      logger -t tomcat-autodiscovery@${instance} "removed tomcat server instance ${instance}-${application}."

      # remove folder
      rm -f "${target}"/*
      rmdir "${target}"
      rm -f "${line}"

    # add new instances
    elif test -f "$line/added"; then

      # instance already exist and we're told to add? skip
      if test -d "/var/lib/tomcats/${instance}-${application}"; then

        logger -t tomcat-autodiscovery@${instance} "/var/lib/tomcats/${instance}-${application} already exists, ignoring '$line'."
        echo "${instance}-${application} already exists" > ${line}/error

        continue;
      fi

      logger -t tomcat-autodiscovery@${instance} "creating tomcat instance ${instance}-${application}..."
      create_instance "${instance}" "${application}"
      run_scripts "${instance}" "${application}" "${line}"
      logger -t tomcat-autodiscovery@${instance} "created tomcat instance ${instance}-${application}."

      if test -f "$line/disabled.bin"; then

        systemctl stop "tomcat@${instance}-${application}"

      else

        systemctl start "tomcat@${instance}-${application}"

      fi

      rm -f "$line/added"

    # update instances
    elif test -f "$line/updated"; then

      if test -f "$line/disabled.bin"; then

        systemctl stop "tomcat@${instance}-${application}"

        run_scripts "${instance}" "${application}" "${line}"

      else

        run_scripts "${instance}" "${application}" "${line}"

        systemctl restart "tomcat@${instance}-${application}"

      fi

      rm -f "$line/updated"

    else

      if test -f "$line/disabled.bin"; then

        systemctl stop "tomcat@${instance}-${application}"

      else

        systemctl restart "tomcat@${instance}-${application}"

      fi

    fi

  done

fi

